#!/bin/bash
# release
#
#	Purpose:
#		Build the  distribution
#
#Copyright (C) 2012 Potix Corporation. All Rights Reserved.
#
SDK=/usr/dart/dart-sdk
if [ ! -d $SDK ] ; then
	echo $SDK not found
	echo "Please link /usr/dart to Dart Editor's folder."
	exit
fi
if [ "$TERM" = "cygwin" ] || [ "$OSTYPE" = "cygwin" ] ; then
	dart2js=$SDK/bin/dart2js.bat
else
	dart2js=$SDK/bin/dart2js
fi

maindir=$0
maindir=${maindir%/*}
if [ "$maindir" = "." ] ; then
  maindir=".."
elif [ "$maindir" = "${maindir%/*}" ] ; then
  maindir="."
else
  maindir=${maindir%/*}
fi
if [ "$TERM" = "cygwin" ] || [ "$OSTYPE" = "cygwin" ] ; then
  maindir=$(cygpath -u $maindir)
fi

cd $maindir
stamp=$(date +%Y-%m-%d)
echo "$stamp working at $maindir"

target=$1

if [ ! -d client ] ; then
  echo "Wrong working directory"
  exit
fi
if [ "$target" = "" ] ; then
	echo "Usage:"
	echo "  release freshly"
	echo "  release 1.0"
	exit
fi

if [ "$target" = "freshly" ] ; then
	flnm=out/rikulo-$stamp.zip
else
	flnm=out/rikulo-$target.zip
fi

#compile less
bin/lesscss

#compile dart
function d2j {
	for f in *; do
		if [ -d $f ] ; then
			if [ $f != dartdoc ] && [ $f != issues ] ; then
				(
				cd $f
				d2j
				)
			fi
		elif [ ${f%.dart} != $f ] ; then
			grep -w 'main[(] *[)]' $f > /dev/null
			if [ "$?" = "0" ] ; then #found
				dart2js $f
				if [ "$?" = "0" ] ; then
					mv out.js ${f%.dart}.dart.js
					mv out.js.map ${f%.dart}.dart.js.map
				else
					exit 1
				fi
			fi
		fi
	done
}
#Note to generate JS since it is too slow
#(
#	cd samples
#	d2j
#)
#Clean *dart.js
find -name '*.dart.js' | xargs rm -f
find -name '*.dart.js.map' | xargs rm -f
find -name 'out.js' | xargs rm -f
find -name 'out.js.map' | xargs rm -f

echo Generating $flnm

mkdir -p out
rm -f $flnm
zip -qr9 $flnm LICENSE.txt README.md changes.md client samples resources
