// DO NOT EDIT
// Auto-generated
// Copyright (C) 2013 Potix Corporation. All Rights Reserved.
part of rikulo_view;

class _StyleImpl implements CssStyleDeclaration {
  final View _view;
  _StyleImpl(View this._view);

  CssStyleDeclaration get _st => _view.node.style;

  //@override
  String getPropertyValue(String propertyName)
  => _st.getPropertyValue(propertyName);
  //@override
  String removeProperty(String propertyName)
  => _st.removeProperty(propertyName);
  //@override
  CssValue getPropertyCssValue(String propertyName)
  => _st.getPropertyCssValue(propertyName);
  //@override
  String getPropertyPriority(String propertyName)
  => _st.getPropertyPriority(propertyName);
  //@override
  String getPropertyShorthand(String propertyName)
  => _st.getPropertyShorthand(propertyName); 
  //@override
  bool isPropertyImplicit(String propertyName)
  => _st.isPropertyImplicit(propertyName);

  //@override
  void setProperty(String propertyName, String value, [String priority]) {
    if (?priority)
      _st.setProperty(propertyName, value, priority);
    else
      _st.setProperty(propertyName, value);
  }

  //@override
  String get cssText => _st.cssText;
  //@override
  void set cssText(String value) {
    final st = _st;
    st.cssText = value;

    var v;
    if ((v = st.left).isEmpty) //restore if not set
      st.left = Css.px(_view.left);
    else
      _view.left = Css.intOf(v);

    if ((v = st.top).isEmpty)
      st.top = Css.px(_view.top);
    else
      _view.top = Css.intOf(v);

    if ((v = st.width).isEmpty)
      st.width = Css.px(_view.width);
    else
      _view.width = Css.intOf(v, defaultValue: null);

    if ((v = st.height).isEmpty)
      st.height = Css.px(_view.height);
    else
      _view.height = Css.intOf(v, defaultValue: null);
  }

  //@override
  int get length => _st.length;
  //@override
  String item(int index) => _st.item(index);
  //@override
  CssRule get parentRule => _st.parentRule;

  String get left => _st.left;
  void set left(String v) {_view.left = Css.intOf(v);}
  String get top => _st.top;
  void set top(String v) {_view.top = Css.intOf(v);}

  String get width => _st.width;
  void set width(String v) {
    _view.width = Css.intOf(v, defaultValue: null);
  }
  String get height => _st.height;
  void set height(String v) {
    _view.height = Css.intOf(v, defaultValue: null);
  }

